{"version":3,"file":"static/js/931.17a9208e.chunk.js","mappings":"uPAKaA,EAAY,WACvB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAgB,SAAAC,GACpB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHR,EAASS,GACT,MACF,IAAK,WACHP,EAAYO,GACZ,MACF,QACE,MAAM,IAAIC,MAAJ,yBAA4BF,IAEvC,EASD,OACE,kBAAMG,UAAWC,EAAAA,EAAAA,QAAgBC,SARb,SAAAP,GACpBA,EAAEQ,iBACF,IAAMC,EAAc,CAAEhB,MAAAA,EAAOE,SAAAA,GAC7BE,GAASa,EAAAA,EAAAA,IAAMD,IArBff,EAAS,IACTE,EAAY,GAsBb,EAGC,WACE,8BACE,sCACA,kBACEe,SAAUZ,EACVI,MAAOV,EACPmB,YAAY,mBACZC,KAAK,QACLX,KAAK,QACLY,UAAQ,EACRT,UAAWC,EAAAA,EAAAA,gBAIf,8BACE,yCACA,kBACEK,SAAUZ,EACVI,MAAOR,EACPiB,YAAY,sBACZC,KAAK,WACLX,KAAK,WACLY,UAAQ,EACRT,UAAWC,EAAAA,EAAAA,gBAIf,mBAAQO,KAAK,SAASR,UAAS,UAAKC,EAAAA,EAAAA,OAAL,cAA/B,qBAKL,EC3DD,EARkB,WAChB,OACE,gBAAKD,UAAWC,EAAAA,EAAAA,UAAhB,UACE,SAACf,EAAD,KAGL,C","sources":["components/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\nimport { styles } from 'utils/styles';\n\nexport const LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        throw new Error(`Invalid field: ${name}`);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const credentials = { email, password };\n    dispatch(logIn(credentials));\n    reset();\n  };\n\n  return (\n    <form className={styles.flexCol} onSubmit={submitHandler}>\n      <label>\n        <span>Email:</span>\n        <input\n          onChange={changeHandler}\n          value={email}\n          placeholder=\"Enter your email\"\n          type=\"email\"\n          name=\"email\"\n          required\n          className={styles.formInput}\n        />\n      </label>\n\n      <label>\n        <span>Password:</span>\n        <input\n          onChange={changeHandler}\n          value={password}\n          placeholder=\"Enter your password\"\n          type=\"password\"\n          name=\"password\"\n          required\n          className={styles.formInput}\n        />\n      </label>\n\n      <button type=\"submit\" className={`${styles.button} mt-6 mb-4`}>\n        Login\n      </button>\n    </form>\n  );\n};\n","import { LoginForm } from 'components/LoginForm';\nimport { styles } from 'utils/styles';\n\nconst LoginPage = () => {\n  return (\n    <div className={styles.container}>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["LoginForm","useState","email","setEmail","password","setPassword","dispatch","useDispatch","changeHandler","e","target","name","value","Error","className","styles","onSubmit","preventDefault","credentials","logIn","onChange","placeholder","type","required"],"sourceRoot":""}