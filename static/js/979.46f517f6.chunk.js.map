{"version":3,"file":"static/js/979.46f517f6.chunk.js","mappings":"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","sources":["components/Contact.jsx","components/ContactList.jsx","components/ContactForm.jsx","components/Filter.jsx","components/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { PropTypes } from 'prop-types';\nimport { MdClose } from 'react-icons/md';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const { name, number, id } = contact;\n  return (\n    <li className=\"flex justify-between\">\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        <MdClose className=\"text-md text-lime-400\" />\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { styles } from 'utils/styles';\nimport { selectContacts, selectFilter } from '../redux/selectors';\nimport { Contact } from './Contact';\n\nconst filterContacts = (contacts, filter) => {\n  if (!contacts) return;\n  if (!filter) return contacts;\n  return contacts.filter(contact =>\n    (contact.name + contact.number).toLowerCase().includes(filter.toLowerCase())\n  );\n};\n\nexport const ContactList = () => {\n  const filter = useSelector(selectFilter);\n  const { items: contacts } = useSelector(selectContacts);\n\n  const visibleContacts = filterContacts(contacts, filter);\n\n  if (contacts.length === 0) return <p className='text-center'>No contacts yet</p>;\n  if (visibleContacts.length === 0) return <p className='text-center'>There are no coincidences</p>;\n  return (\n    <ul className={styles.flexCol}>\n      {visibleContacts.map(contact => (\n        <Contact key={contact.id} contact={contact} />\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { styles } from 'utils/styles';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const changeHandler = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error(`Invalid field: ${name}`);\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <form className={styles.flexCol} onSubmit={submitHandler}>\n      <label>\n        <span>Name:</span>\n        <input\n          onChange={changeHandler}\n          value={name}\n          placeholder=\"Enter contact name\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          className={styles.formInput}\n        />\n      </label>\n\n      <label>\n        <span>Number:</span>\n        <input\n          onChange={changeHandler}\n          value={number}\n          placeholder=\"Enter contact number\"\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={styles.formInput}\n        />\n      </label>\n\n      <button type=\"submit\" className={`${styles.button} mt-6 mb-4`}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { styles } from 'utils/styles';\nimport { onFilter } from '../redux/filter/slice';\nimport { selectFilter } from '../redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <input\n        onChange={e => dispatch(onFilter(e.target.value))}\n        value={filter}\n        type=\"text\"\n        placeholder=\"Search\"\n        name=\"filter\"\n        className={styles.formInput}\n      />\n    </div>\n  );\n};\n","import { BallTriangle } from 'react-loader-spinner';\n\nexport const Loader = () => (\n  <div className=\"flex align-center justify-center min-w-full min-h-full\">\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"#bef264\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperClass={{}}\n      wrapperStyle=\"\"\n      visible={true}\n    />\n  </div>\n);\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { ContactList } from '../components/ContactList';\nimport { ContactForm } from '../components/ContactForm';\nimport { Filter } from '../components/Filter';\nimport { styles } from 'utils/styles';\nimport { Loader } from 'components/Loader';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  const { isLoading, error } = useSelector(selectContacts);\n\n  const status = {\n    pending: isLoading,\n    rejected: error && !isLoading,\n    fulfilled: !isLoading && !error,\n  };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={`${styles.flexCol} mx-auto md:w-80`}>\n      <h1 className={styles.title}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.title}>Contacts</h2>\n      <Filter />\n      {status.pending && <Loader />}\n      {status.rejected && <p>{error}</p>}\n      {status.fulfilled && <ContactList />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["Contact","contact","dispatch","useDispatch","name","number","id","className","type","onClick","deleteContact","ContactList","filter","useSelector","selectFilter","contacts","selectContacts","items","visibleContacts","toLowerCase","includes","filterContacts","length","styles","map","ContactForm","useState","setName","setNumber","changeHandler","e","target","value","Error","onSubmit","preventDefault","newContact","addContact","onChange","placeholder","pattern","title","required","Filter","onFilter","Loader","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","isLoading","error","status","pending","rejected","fulfilled","useEffect","fetchContacts"],"sourceRoot":""}